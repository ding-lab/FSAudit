#!/usr/bin/python

# Matthew Wyczalkowski
# m.wyczalkowski@wustl.edu
# Washington University School of Medicine

# Assume input columns are:
#   file_name file_type total_size owner_name time_mod hard_links
#
# For regular files (not directories, soft links, etc)
#   extract 1) dirname, 2) filename, 3) extension.  Note that filename includes extension
# Otherwise, write out original information
#
# Write the following columns:
#   dirname, filename, ext, file_type, total_size, owner_name, time_mod, hard_links

import sys, os;

def main():
    from optparse import OptionParser
    usage_text = """usage: %prog [options] ...
        Process list of generated by stat of file options
        """

    parser = OptionParser(usage_text, version="$Revision: 1.2 $")
    parser.add_option("-i", dest="infn", default="stdin", help="Input filename")
    parser.add_option("-o", dest="outfn", default="stdout", help="Output filename")

    (options, params) = parser.parse_args()

#    if (len(params) != 3):
#        parser.error("Pass 3 arguments.")

    if options.infn == "stdin":
        f = sys.stdin
    else:
        f = open(options.infn, 'r')
    if options.outfn == "stdout":
        o = sys.stdout
    else:
        o = open(options.outfn, "w")

    o.write('\t'.join( ("# dirname", "filename", "ext", "file_type", "total_size", "owner_name", "time_mod", "hard_links"))+"\n")
    for line in f:
#     1  file_name 
#     2  file_type
#     3  total_size
#     4  owner_name
#     5  time_mod
#     6  hard_links

        (file_name, file_type, total_size, owner_name, time_mod, hard_links) = line.rstrip().split("\t")
        # Skip headers
        # TODO: preserve ROOT_DIR
        if file_name.startswith("#"): continue

        # Process only regular files
        if file_type == "regular file": 
            # From a complete file_name, extract 1) dirname, 2) filename, 3) extension.  Note that filename includes extension
            dirname = os.path.dirname(file_name)
            filename = os.path.basename(file_name)
            dirname = os.path.dirname(file_name)
            base, ext = os.path.splitext(filename)
        else:
            dirname = file_name
            filename = ""
            ext = ""

        o.write('\t'.join( (dirname, filename, ext, file_type, total_size, owner_name, time_mod, hard_links))+"\n")

    f.close()
    o.close()

if __name__ == '__main__':
    main()

